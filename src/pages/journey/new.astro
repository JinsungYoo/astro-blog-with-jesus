---
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import BaseHead from '../../components/BaseHead.astro';
---

<html lang="ko">
  <head>
    <BaseHead title="새 글 작성" description="글과 이미지를 등록해보세요." />
    <style>
      main {
        max-width: 720px;
        margin: 2rem auto;
        padding: 1rem;
      }
      label {
        display: block;
        margin: 1rem 0 0.3rem;
        font-weight: bold;
      }
      input, textarea {
        width: 100%;
        padding: 0.5rem;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 6px;
        box-sizing: border-box;
      }
      .btn {
        margin-top: 1rem;
        padding: 0.5rem 1.2rem;
        background: var(--accent, #2e7d32);
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;
      }
      .preview-img {
        margin-top: 1rem;
        max-width: 100%;
        border-radius: 6px;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <h1>✍️ 새 글 작성</h1>

      <form id="post-form">
        <label>제목</label>
        <input type="text" name="title" required />

        <label>내용</label>
        <textarea name="content" rows="6" required></textarea>

        <label>이미지 업로드</label>
        <input type="file" id="image-upload" accept="image/*" required />

        <img id="image-preview" class="preview-img" style="display: none;" />

        <button type="submit" class="btn">게시하기</button>
      </form>
    </main>
    <Footer />

    <script type="module">
        import { supabase } from '../../lib/supabaseClient.js';
      
        const form = document.getElementById('post-form');
        const imageInput = document.getElementById('image-upload');
        const imagePreview = document.getElementById('image-preview');
      
        let uploadedImageUrl = '';
      
        // 이미지 업로드 및 미리보기
        imageInput.addEventListener('change', async (e) => {
          const file = e.target.files[0];
          if (!file) return;
      
          // 미리보기
          const reader = new FileReader();
          reader.onload = () => {
            imagePreview.src = reader.result;
            imagePreview.style.display = 'block';
          };
          reader.readAsDataURL(file);
      
          // 파일명 생성 (충돌 방지)
          const fileExt = file.name.split('.').pop();
          const fileName = `${Date.now()}.${fileExt}`;
      
          // Supabase Storage 업로드
          const { data, error } = await supabase
            .storage
            .from('images')
            .upload(fileName, file);
      
          if (error) {
            alert(`이미지 업로드 실패: ${error.message}`);
            console.error('이미지 업로드 오류:', error);
            return;
          }
      
          // 업로드 성공 시 퍼블릭 URL 가져오기
          const { data: urlData } = supabase
            .storage
            .from('images')
            .getPublicUrl(fileName);
      
          uploadedImageUrl = urlData.publicUrl;
          console.log('✅ 이미지 URL:', uploadedImageUrl);
        });
      
        // 폼 제출
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
      
          const title = form.title.value;
          const content = form.content.value;
      
          const { data: userData, error: userError } = await supabase.auth.getUser();
          const user = userData.user;
      
          if (!user) {
            alert("로그인이 필요합니다.");
            return;
          }
      
          const { data, error } = await supabase.from('posts').insert([
            {
              title,
              content,
              image_url: uploadedImageUrl,
              user_id: user.id
            }
          ]);
      
          if (error) {
            console.error('❌ 글 저장 실패:', error);
            alert(`글 저장 실패: ${error.message || '[에러 정보 없음]'}`);
          } else {
            alert('✅ 게시글이 등록되었습니다!');
            window.location.href = '/journey';
          }
        });
      </script>      
  </body>
</html>
